let overlay;
let animationId;

const createOverlay = () => {
    const canvas = document.getElementsByTagName('canvas')[0];
    if (!canvas) {
        return;
    }

// Create a mutation observer to check if a new canvas was added to the dom later
const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
        for (const el of mutation.addedNodes) {
            const canvas = el.nodeName.toLowerCase() == 'canvas' ? el : el.getElementsByTagName('canvas')[0];
            if (canvas) {
                createOverlay();
                return;
            }
        }

        if (overlay && mutation.removedNodes.length > 0 && document.getElementsByTagName('canvas').length === 0) {
            cancelAnimationFrame(animationId);
            overlay.remove();
            overlay = undefined;
        }
    }
});

createOverlay();
observer.observe(document.body, { childList: true, subtree: true });
